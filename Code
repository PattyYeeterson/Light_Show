// Set a sonar in Pins 2 & 3 and create variables to measure distance
// Set an LED as output in Pin 9 and a button as input in Pin 4
// Set directional motor inputs in Pins 6 & 7 and a speed input in Pin 11
// Set a variable to check if the brake is hit as 0
int echoPin = 2;
int trigPin = 3;
int motor1a = 6;
int motor1b = 7;
int speed = 11;
int red = 9;
int button = 4;
float duration = 0.0; // time for pulse to return back to sensor
float distance = 0.0; // distance calculated using duration value
bool brake = false;

void setup()
{
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(speed, OUTPUT);
  pinMode(motor1a, OUTPUT);
  pinMode(motor1b, OUTPUT);
  pinMode(button, INPUT);
  pinMode(red, OUTPUT);
  Serial.begin(9600);
}

// This function returns the distance as measured by the sonar sensor.
float checkDistance(){
  digitalWrite(trigPin, LOW); 
  delayMicroseconds(2);
 
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  
  duration = pulseIn(echoPin, HIGH);
  distance = (duration / 2) * 0.0344;
  return distance;
}

void loop(){
  if (digitalRead(button) == 0){
    if (distance < 10){
      analogWrite(speed, 100);
      digitalWrite(motor1a, HIGH);
      digitalWrite(motor1b, LOW);
      delay(200);
      digitalWrite(red, HIGH);
      delay(250);
      digitalWrite(red, LOW);
      delay(250);
  	} 
    if (distance >= 10 && distance <= 20){
      analogWrite(speed, 150);
      digitalWrite(motor1a, HIGH);
      digitalWrite(motor1b, LOW);
      delay(200);
      digitalWrite(red, HIGH);
      delay(500);
      digitalWrite(red, LOW);
      delay(500);
  	}
    if (distance < 10 && distance > 0){
      analogWrite(speed, 250);
      digitalWrite(motor1a, HIGH);
      digitalWrite(motor1b, LOW);
  	}
  }
  else{
     digitalWrite(motor1a, LOW);
     digitalWrite(motor1b, LOW);
     digitalWrite(red, LOW);
  }
}
